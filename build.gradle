plugins {
    id 'java'
}

group = 'com.hzzz.points'
version = '0.2.0-SNAPSHOT'

repositories {
//    mavenLocal()  自己电脑的缓存
    maven {
        name "Alibaba"
        url "https://maven.aliyun.com/repository/public"
    }
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'ProtocolLib'
        url "https://repo.dmulloy2.net/repository/public/"
    }
    mavenCentral()  // 中央仓库
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.19.2-R0.1-SNAPSHOT")

    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    implementation 'org.xerial:sqlite-jdbc:3.39.3.0'

    // https://mvnrepository.com/artifact/org.bstats/bstats-bukkit
    implementation 'org.bstats:bstats-bukkit:3.0.0'

//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
//    compile fileTree(dir: 'src/main/libs', includes: ['*.jar'])
//    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "4.7.0";
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

test {
    useJUnitPlatform()
}